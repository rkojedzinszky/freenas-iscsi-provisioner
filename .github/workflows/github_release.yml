# https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions#github-context
# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idif
# https://github.community/t/how-to-get-just-the-tag-name/16241/10

name: github_release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: source info
        id: source_info
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - uses: actions/setup-go@v2
        with:
          stable: 'false'
          go-version: '1.15.7'

      - uses: actions/checkout@v2

      - name: build_release_assets
        run: |
          mkdir -p bin_release
          GOPATH="" CGO_ENABLED=0 GOOS=linux   GOARCH=amd64 go build -a -ldflags "-extldflags '-static' -X main.AppVersion=$SOURCE_TAG" -o bin_release/freenas-iscsi-provisioner_linux-amd64
          GOPATH="" CGO_ENABLED=0 GOOS=linux   GOARCH=arm   go build -a -ldflags "-extldflags '-static' -X main.AppVersion=$SOURCE_TAG" -o bin_release/freenas-iscsi-provisioner_linux-arm
          GOPATH="" CGO_ENABLED=0 GOOS=linux   GOARCH=arm64 go build -a -ldflags "-extldflags '-static' -X main.AppVersion=$SOURCE_TAG" -o bin_release/freenas-iscsi-provisioner_linux-arm64
          GOPATH="" CGO_ENABLED=0 GOOS=darwin  GOARCH=amd64 go build -a -ldflags "-extldflags '-static' -X main.AppVersion=$SOURCE_TAG" -o bin_release/freenas-iscsi-provisioner_darwin-amd64
          GOPATH="" CGO_ENABLED=0 GOOS=freebsd GOARCH=amd64 go build -a -ldflags "-extldflags '-static' -X main.AppVersion=$SOURCE_TAG" -o bin_release/freenas-iscsi-provisioner_freebsd-amd64

      - name: create release
        id: create_release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

      - name: upload release assets
        id: upload-release-assets
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./bin_release/freenas-iscsi-provisioner_*"]'

